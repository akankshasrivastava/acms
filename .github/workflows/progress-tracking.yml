# .github/workflows/progress-tracking.yml
name: Progress Tracking

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    branches: [ main ]

jobs:
  code-metrics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # For complete history

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage pytest pylint pytest-cov radon

      - name: Run tests and coverage
        run: |
          pytest --cov=src/adaptive_context --cov-report=xml
          coverage report > coverage_report.txt

      - name: Code quality metrics
        run: |
          pylint src/adaptive_context --output-format=text > pylint_report.txt
          radon cc src/adaptive_context -a > complexity_report.txt

      - name: Update Issue Progress
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            // Read reports
            const coverage = fs.readFileSync('coverage_report.txt', 'utf8');
            const quality = fs.readFileSync('pylint_report.txt', 'utf8');
            const complexity = fs.readFileSync('complexity_report.txt', 'utf8');
            
            // Extract commit info
            const commit = context.payload.head_commit;
            const issueMatch = commit.message.match(/#(\d+)/);
            
            if (issueMatch) {
              const issueNumber = issueMatch[1];
              
              // Create progress update
              const update = `## 🔄 Automated Progress Update
              
              ### 📊 Metrics
              \`\`\`
              ${coverage}
              \`\`\`
              
              ### 🎯 Code Quality
              \`\`\`
              ${quality}
              \`\`\`
              
              ### 🔍 Complexity Analysis
              \`\`\`
              ${complexity}
              \`\`\`
              
              ### 📝 Commit Details
              - Message: ${commit.message}
              - Author: ${commit.author.name}
              - Timestamp: ${commit.timestamp}
              `;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.name,
                issue_number: issueNumber,
                body: update
              });
            }

